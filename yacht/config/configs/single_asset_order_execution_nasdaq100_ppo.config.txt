input: {
    market: 'Yahoo'
    dataset: 'DayFrequencyDataset'
    num_assets_per_dataset: 1
    scaler: 'MinMaxScaler'
    scale_on_interval: '1d'
    tickers: ['NASDAQ100']
    fine_tune_tickers: ['AAPL']
    intervals: ['1d']
    features: ['Close', 'Open', 'High', 'Low', 'Volume']
    decision_price_feature: 'TP'
    technical_indicators: ['macd', 'rsi_30', 'cci_30', 'dx_30']
    start: '1/8/2016'
    end: '1/8/2021'
    period_length: '1M'
    window_size: 3
    render_periods: [
     {start: '1/8/2019', end: '1/3/2020'},
     {start: '1/8/2020', end: '1/3/2021'}
    ]
    include_weekends: false
    validation_split_ratio: 0.40
    backtest_split_ratio: 0.0
    embargo_ratio: 0.03
    backtest: {
        run: false
        deterministic: false
        tickers: ['AAPL']
    }
}
environment: {
    name: 'OrderExecutionEnvironment-v0'
    n_envs: 8
    envs_on_different_processes: false
    buy_commission: 0.00
    sell_commission: 0.00
    initial_cash_position: 5000
    reward_schemas: [
    {
        name: 'DecisionMakingRewardSchema'
    },
    {
        name: 'ActionMagnitudeRewardSchema',
        reward_scaling: 0.01
    }
    ]
    action_schema: 'DiscreteActionScheme'
    possibilities: [0, 0.25, 0.5, 0.75, 1]
}
agent: {
    name: 'PPO'
    is_classic_method: false
    verbose: true
    policy: {
        name: 'MlpPolicy'
        activation_fn: 'Tanh',
        feature_extractor: {
            name: 'RecurrentFeatureExtractor'
            features_dim: [64, 64, 512]
            drop_out_p: 0.5
        }
        net_arch: {
            shared: [256]
            vf: [64]
            pi: [64]
        }
    }
}
train: {
    trainer_name: 'Trainer'
    total_timesteps: 2000000
    fine_tune_total_timesteps: 500000
    collecting_n_steps: 2048
    learning_rate: 0.00025
    batch_size: 512
    n_epochs: 10
    gamma: 0.99
    gae_lambda: 0.95
    clip_range: 0.3
    vf_clip_range: 0.3
    entropy_coefficient: 0.01,
    vf_coefficient: 0.5
    max_grad_norm: 0.5
    use_sde: false
    sde_sample_freq: -1
}
meta: {
    log_frequency_steps: 5000
    metrics_to_save_best_on: ['PA']
    metrics_to_load_best_on: ['PA']
    device: 'gpu'
    experiment_tracker: 'wandb'
}